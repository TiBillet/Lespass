# Generated by Django 4.2.24 on 2025-10-27 14:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('BaseBillet', '0177_alter_productformfield_field_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fedow_public', '0003_assetfedowpublic_archive'),
    ]

    operations = [
        migrations.CreateModel(
            name='CrowdConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Financement participatif', max_length=255, verbose_name='Titre')),
                ('description', models.TextField(blank=True, default='Découvrez les projets en cours de financement participatif')),
                ('vote_button_name', models.CharField(blank=True, default='Voter', max_length=255, verbose_name='Nom du bouton de vote')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Initiative',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the contributing project or initiative.', max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('short_description', models.CharField(blank=True, help_text='Short description for the cards view and social card.', max_length=500, verbose_name='Short description')),
                ('funding_goal', models.PositiveIntegerField(help_text='Serves only to calculate the percentage claimed by participants.', verbose_name='Goal (cents)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('funding_mode', models.CharField(choices=[('cascade', 'Contribution en cascade'), ('adaptative', 'Contribution adaptative')], default='adaptative', max_length=20)),
                ('image', models.URLField(blank=True, null=True, verbose_name='Image (URL)')),
                ('img', stdimage.models.StdImageField(blank=True, force_min_size=False, help_text='The main image of the initiative, displayed in the head of the page and for social shares. If empty, the config image is displayed.', null=True, upload_to='images/', variations={'crop': (480, 270, True), 'crop_hdr': (960, 540, True), 'fhd': (1920, 1920), 'hdr': (1280, 1280), 'med': (480, 480), 'social_card': (1200, 630, True), 'thumbnail': (150, 90)}, verbose_name='Main image')),
                ('sticker_img', stdimage.models.StdImageField(blank=True, force_min_size=False, help_text='The small image displayed in the events list. If None, img will be displayed. 4x3 ratio.', null=True, upload_to='images/', variations={'crop': (480, 270, True), 'crop_hdr': (960, 540, True), 'fhd': (1920, 1920), 'hdr': (1280, 1280), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Sticker image')),
                ('asset', models.ForeignKey(blank=True, help_text='Force a specific asset for project financing. If empty, it will be in euros.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='projects', to='fedow_public.assetfedowpublic', verbose_name='Asset')),
                ('tags', models.ManyToManyField(blank=True, related_name='initiatives', to='BaseBillet.tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contributor_name', models.CharField(blank=True, help_text="Nom affiché de l'origine de la contribution", max_length=255, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name="Decrivez ce que vous attendez de la contribution, ou envoyez un messages sympa à l'équipe !")),
                ('amount', models.PositiveIntegerField(verbose_name='Montant (centimes)')),
                ('payment_status', models.CharField(choices=[('pending', 'En attente de paiement'), ('paid', 'Payée'), ('admin_paid', 'Indiquée comme payée')], default='pending', max_length=16, verbose_name='Statut de paiement')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Payée le')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contributions', to=settings.AUTH_USER_MODEL)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contributions', to='crowds.initiative')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='crowds.initiative')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiative_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('initiative', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField(help_text='Description de la participation (schema.org/description)')),
                ('requested_amount_cents', models.PositiveIntegerField(help_text='Part du budget sollicité en centimes (schema.org/MonetaryAmount)')),
                ('state', models.CharField(choices=[('requested', 'Demande formulée'), ('approved_admin', 'Demande validée par un·e admin'), ('completed_user', "Participation indiquée comme terminée par l'utilisateur·ice"), ('validated_admin', 'Participation validée par un·e admin')], default='requested', help_text="Statut de l'action (schema.org/ActionStatusType)", max_length=32)),
                ('time_spent_minutes', models.PositiveIntegerField(blank=True, help_text='Temps passé déclaré par la personne (minutes)', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative', models.ForeignKey(help_text='Projet concerné (schema.org/Project)', on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='crowds.initiative')),
                ('participant', models.ForeignKey(help_text='Utilisateur·ice qui participe (schema.org/Person)', on_delete=django.db.models.deletion.CASCADE, related_name='crowd_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Participation',
                'verbose_name_plural': 'Participations',
                'ordering': ('-created_at',),
                'indexes': [models.Index(fields=['initiative', 'participant'], name='crowds_part_initiat_4e1a77_idx')],
            },
        ),
    ]
