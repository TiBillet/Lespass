# Generated by Django 4.2.17 on 2025-03-13 09:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models
import stdimage.validators


class Migration(migrations.Migration):

    dependencies = [
        ('Customers', '0003_alter_client_categorie'),
        ('rest_framework_api_key', '0005_auto_20220110_1102'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('BaseBillet', '0125_configuration_allow_concurrent_bookings_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrevoConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=200, null=True)),
                ('last_log', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Brevo setting',
                'verbose_name_plural': 'Brevo settings',
            },
        ),
        migrations.AlterModelOptions(
            name='configuration',
            options={'verbose_name': 'Settings', 'verbose_name_plural': 'Settings'},
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ('datetime',), 'verbose_name': 'Event', 'verbose_name_plural': 'Events'},
        ),
        migrations.AlterModelOptions(
            name='federatedplace',
            options={'verbose_name': 'Federated space', 'verbose_name_plural': 'Federated spaces'},
        ),
        migrations.AlterModelOptions(
            name='formbricksconfig',
            options={'verbose_name': 'Formbrick settings', 'verbose_name_plural': 'Formbrick settings'},
        ),
        migrations.AlterModelOptions(
            name='formbricksforms',
            options={'verbose_name': 'Formbricks form', 'verbose_name_plural': 'Formbricks forms'},
        ),
        migrations.AlterModelOptions(
            name='membership',
            options={'verbose_name': 'Subscription', 'verbose_name_plural': 'Subscriptions'},
        ),
        migrations.AlterModelOptions(
            name='paiement_stripe',
            options={'verbose_name': 'Stripe payment', 'verbose_name_plural': 'Stripe payments'},
        ),
        migrations.AlterModelOptions(
            name='postaladdress',
            options={'verbose_name': 'Postal address', 'verbose_name_plural': 'Postal addresses'},
        ),
        migrations.AlterModelOptions(
            name='price',
            options={'ordering': ('prix',), 'verbose_name': 'Rate', 'verbose_name_plural': 'Rates'},
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ('poids',), 'verbose_name': 'Product', 'verbose_name_plural': 'Products'},
        ),
        migrations.AlterModelOptions(
            name='ticket',
            options={'verbose_name': 'Ticket', 'verbose_name_plural': 'Tickets'},
        ),
        migrations.AlterField(
            model_name='carrousel',
            name='img',
            field=stdimage.models.StdImageField(force_min_size=False, upload_to='images/', validators=[stdimage.validators.MinSizeValidator(720, 135)], variations={'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480)}, verbose_name='Image file'),
        ),
        migrations.AlterField(
            model_name='carrousel',
            name='link',
            field=models.URLField(blank=True, null=True, verbose_name='Link URL'),
        ),
        migrations.AlterField(
            model_name='carrousel',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Slide name'),
        ),
        migrations.AlterField(
            model_name='carrousel',
            name='on_event_list_page',
            field=models.BooleanField(default=True, verbose_name='Add to event list carousel'),
        ),
        migrations.AlterField(
            model_name='carrousel',
            name='order',
            field=models.PositiveSmallIntegerField(default=1000, verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='adress',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Address'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='allow_concurrent_bookings',
            field=models.BooleanField(default=True, help_text='Events need start and end dates to be comparable.', verbose_name='Allow concurrent bookings'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='carte_restaurant',
            field=stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Restaurant menu image'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='city',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='City'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='event_menu_name',
            field=models.CharField(default='Calendar', max_length=200, verbose_name='Calendar page name'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='federated_with',
            field=models.ManyToManyField(blank=True, help_text='Displays events and subscription of the federated collectives.', related_name='federated_with', to='Customers.client', verbose_name='Federated with'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='fuseau_horaire',
            field=models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Asmera', 'Africa/Asmera'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Timbuktu', 'Africa/Timbuktu'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/ComodRivadavia', 'America/Argentina/ComodRivadavia'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Atka', 'America/Atka'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Buenos_Aires', 'America/Buenos_Aires'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Catamarca', 'America/Catamarca'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Ciudad_Juarez', 'America/Ciudad_Juarez'), ('America/Coral_Harbour', 'America/Coral_Harbour'), ('America/Cordoba', 'America/Cordoba'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Ensenada', 'America/Ensenada'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fort_Wayne', 'America/Fort_Wayne'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Indianapolis', 'America/Indianapolis'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Jujuy', 'America/Jujuy'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Knox_IN', 'America/Knox_IN'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Louisville', 'America/Louisville'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Mendoza', 'America/Mendoza'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montreal', 'America/Montreal'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Nuuk', 'America/Nuuk'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Acre', 'America/Porto_Acre'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Rosario', 'America/Rosario'), ('America/Santa_Isabel', 'America/Santa_Isabel'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Shiprock', 'America/Shiprock'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Virgin', 'America/Virgin'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/South_Pole', 'Antarctica/South_Pole'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Ashkhabad', 'Asia/Ashkhabad'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Calcutta', 'Asia/Calcutta'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Chongqing', 'Asia/Chongqing'), ('Asia/Chungking', 'Asia/Chungking'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Dacca', 'Asia/Dacca'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Harbin', 'Asia/Harbin'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Istanbul', 'Asia/Istanbul'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kashgar', 'Asia/Kashgar'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Katmandu', 'Asia/Katmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macao', 'Asia/Macao'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Rangoon', 'Asia/Rangoon'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Saigon', 'Asia/Saigon'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Tel_Aviv', 'Asia/Tel_Aviv'), ('Asia/Thimbu', 'Asia/Thimbu'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ujung_Pandang', 'Asia/Ujung_Pandang'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Ulan_Bator', 'Asia/Ulan_Bator'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faeroe', 'Atlantic/Faeroe'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Jan_Mayen', 'Atlantic/Jan_Mayen'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/ACT', 'Australia/ACT'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Canberra', 'Australia/Canberra'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/LHI', 'Australia/LHI'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/NSW', 'Australia/NSW'), ('Australia/North', 'Australia/North'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Queensland', 'Australia/Queensland'), ('Australia/South', 'Australia/South'), ('Australia/Sydney', 'Australia/Sydney'), ('Australia/Tasmania', 'Australia/Tasmania'), ('Australia/Victoria', 'Australia/Victoria'), ('Australia/West', 'Australia/West'), ('Australia/Yancowinna', 'Australia/Yancowinna'), ('Brazil/Acre', 'Brazil/Acre'), ('Brazil/DeNoronha', 'Brazil/DeNoronha'), ('Brazil/East', 'Brazil/East'), ('Brazil/West', 'Brazil/West'), ('CET', 'CET'), ('CST6CDT', 'CST6CDT'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Canada/Saskatchewan', 'Canada/Saskatchewan'), ('Canada/Yukon', 'Canada/Yukon'), ('Chile/Continental', 'Chile/Continental'), ('Chile/EasterIsland', 'Chile/EasterIsland'), ('Cuba', 'Cuba'), ('EET', 'EET'), ('EST', 'EST'), ('EST5EDT', 'EST5EDT'), ('Egypt', 'Egypt'), ('Eire', 'Eire'), ('Etc/GMT', 'Etc/GMT'), ('Etc/GMT+0', 'Etc/GMT+0'), ('Etc/GMT+1', 'Etc/GMT+1'), ('Etc/GMT+10', 'Etc/GMT+10'), ('Etc/GMT+11', 'Etc/GMT+11'), ('Etc/GMT+12', 'Etc/GMT+12'), ('Etc/GMT+2', 'Etc/GMT+2'), ('Etc/GMT+3', 'Etc/GMT+3'), ('Etc/GMT+4', 'Etc/GMT+4'), ('Etc/GMT+5', 'Etc/GMT+5'), ('Etc/GMT+6', 'Etc/GMT+6'), ('Etc/GMT+7', 'Etc/GMT+7'), ('Etc/GMT+8', 'Etc/GMT+8'), ('Etc/GMT+9', 'Etc/GMT+9'), ('Etc/GMT-0', 'Etc/GMT-0'), ('Etc/GMT-1', 'Etc/GMT-1'), ('Etc/GMT-10', 'Etc/GMT-10'), ('Etc/GMT-11', 'Etc/GMT-11'), ('Etc/GMT-12', 'Etc/GMT-12'), ('Etc/GMT-13', 'Etc/GMT-13'), ('Etc/GMT-14', 'Etc/GMT-14'), ('Etc/GMT-2', 'Etc/GMT-2'), ('Etc/GMT-3', 'Etc/GMT-3'), ('Etc/GMT-4', 'Etc/GMT-4'), ('Etc/GMT-5', 'Etc/GMT-5'), ('Etc/GMT-6', 'Etc/GMT-6'), ('Etc/GMT-7', 'Etc/GMT-7'), ('Etc/GMT-8', 'Etc/GMT-8'), ('Etc/GMT-9', 'Etc/GMT-9'), ('Etc/GMT0', 'Etc/GMT0'), ('Etc/Greenwich', 'Etc/Greenwich'), ('Etc/UCT', 'Etc/UCT'), ('Etc/UTC', 'Etc/UTC'), ('Etc/Universal', 'Etc/Universal'), ('Etc/Zulu', 'Etc/Zulu'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belfast', 'Europe/Belfast'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Kyiv', 'Europe/Kyiv'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Nicosia', 'Europe/Nicosia'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Tiraspol', 'Europe/Tiraspol'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GB', 'GB'), ('GB-Eire', 'GB-Eire'), ('GMT', 'GMT'), ('GMT+0', 'GMT+0'), ('GMT-0', 'GMT-0'), ('GMT0', 'GMT0'), ('Greenwich', 'Greenwich'), ('HST', 'HST'), ('Hongkong', 'Hongkong'), ('Iceland', 'Iceland'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Iran', 'Iran'), ('Israel', 'Israel'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Kwajalein', 'Kwajalein'), ('Libya', 'Libya'), ('MET', 'MET'), ('MST', 'MST'), ('MST7MDT', 'MST7MDT'), ('Mexico/BajaNorte', 'Mexico/BajaNorte'), ('Mexico/BajaSur', 'Mexico/BajaSur'), ('Mexico/General', 'Mexico/General'), ('NZ', 'NZ'), ('NZ-CHAT', 'NZ-CHAT'), ('Navajo', 'Navajo'), ('PRC', 'PRC'), ('PST8PDT', 'PST8PDT'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Johnston', 'Pacific/Johnston'), ('Pacific/Kanton', 'Pacific/Kanton'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Ponape', 'Pacific/Ponape'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Samoa', 'Pacific/Samoa'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Truk', 'Pacific/Truk'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('Pacific/Yap', 'Pacific/Yap'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('ROC', 'ROC'), ('ROK', 'ROK'), ('Singapore', 'Singapore'), ('Turkey', 'Turkey'), ('UCT', 'UCT'), ('US/Alaska', 'US/Alaska'), ('US/Aleutian', 'US/Aleutian'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/East-Indiana', 'US/East-Indiana'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Indiana-Starke', 'US/Indiana-Starke'), ('US/Michigan', 'US/Michigan'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('US/Samoa', 'US/Samoa'), ('UTC', 'UTC'), ('Universal', 'Universal'), ('W-SU', 'W-SU'), ('WET', 'WET'), ('Zulu', 'Zulu')], default='Europe/Paris', max_length=50, verbose_name='Timezone'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='jauge_max',
            field=models.PositiveSmallIntegerField(default=50, verbose_name='Default maximum capacity'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='key_cashless',
            field=models.CharField(blank=True, max_length=41, null=True, verbose_name='Cashless server API key'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='key_fedow',
            field=models.CharField(blank=True, max_length=41, null=True, verbose_name='Fedow server API'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='legal_documents',
            field=models.URLField(blank=True, null=True, verbose_name='Terms and conditions document'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='long_description',
            field=models.TextField(blank=True, null=True, verbose_name='Long description'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='map_img',
            field=stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Geographical map image'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='membership_menu_name',
            field=models.CharField(default='Subscriptions', max_length=200, verbose_name='Subscription page name'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='need_name',
            field=models.BooleanField(default=True, verbose_name='Users have to give a first and last name at registration.'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='organisation',
            field=models.CharField(db_index=True, max_length=50, verbose_name='Collective name'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='phone',
            field=models.CharField(max_length=20, verbose_name='Phone number'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='postal_code',
            field=models.IntegerField(blank=True, null=True, verbose_name='Zip code'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='server_cashless',
            field=models.URLField(blank=True, max_length=300, null=True, verbose_name='Cashless server URL'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='server_fedow',
            field=models.URLField(blank=True, max_length=300, null=True, verbose_name='Fedow server URL'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='short_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Short description'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='siren',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='SIREN number'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='tva_number',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='VAT number'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='vat_taxe',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Default VAT', max_digits=4),
        ),
        migrations.AlterField(
            model_name='event',
            name='booking',
            field=models.BooleanField(default=False, help_text='The event will be visible at the top of the home page, allowing the user to book a specific date.', verbose_name='Restaurant mode / scheduler'),
        ),
        migrations.AlterField(
            model_name='event',
            name='carrousel',
            field=models.ManyToManyField(blank=True, related_name='events', to='BaseBillet.carrousel', verbose_name='Carousel slides'),
        ),
        migrations.AlterField(
            model_name='event',
            name='categorie',
            field=models.CharField(choices=[('LIV', 'Concert'), ('FES', 'Festival'), ('REU', 'Meeting'), ('CON', 'Conference'), ('RES', 'Catering'), ('ACT', 'Volunteering')], default='LIV', max_length=3, verbose_name='Event category'),
        ),
        migrations.AlterField(
            model_name='event',
            name='datetime',
            field=models.DateTimeField(verbose_name='Event start'),
        ),
        migrations.AlterField(
            model_name='event',
            name='easy_reservation',
            field=models.BooleanField(default=False, help_text='One-click booking for logged-in user.', verbose_name='Quick booking'),
        ),
        migrations.AlterField(
            model_name='event',
            name='end_datetime',
            field=models.DateTimeField(blank=True, help_text='Second date / time optional', null=True, verbose_name='Event end'),
        ),
        migrations.AlterField(
            model_name='event',
            name='img',
            field=stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'crop': (480, 270, True), 'crop_hdr': (960, 540, True), 'fhd': (1920, 1920), 'hdr': (1280, 1280), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Main image'),
        ),
        migrations.AlterField(
            model_name='event',
            name='is_external',
            field=models.BooleanField(default=False, help_text='The event is handled outside of this platform (ex: Facebook event).', verbose_name='External event'),
        ),
        migrations.AlterField(
            model_name='event',
            name='jauge_max',
            field=models.PositiveSmallIntegerField(default=50, verbose_name='Maximum capacity'),
        ),
        migrations.AlterField(
            model_name='event',
            name='long_description',
            field=models.TextField(blank=True, null=True, verbose_name='Long description'),
        ),
        migrations.AlterField(
            model_name='event',
            name='max_per_user',
            field=models.PositiveSmallIntegerField(default=10, help_text='The same email can be used for multiple tickets.', verbose_name='Maximum bookings per user'),
        ),
        migrations.AlterField(
            model_name='event',
            name='minimum_cashless_required',
            field=models.SmallIntegerField(default=0, verbose_name='Minimum value of cashless refill'),
        ),
        migrations.AlterField(
            model_name='event',
            name='name',
            field=models.CharField(max_length=200, verbose_name='Event name'),
        ),
        migrations.AlterField(
            model_name='event',
            name='options_checkbox',
            field=models.ManyToManyField(blank=True, related_name='options_checkbox', to='BaseBillet.optiongenerale', verbose_name='Multiple choice menu'),
        ),
        migrations.AlterField(
            model_name='event',
            name='options_radio',
            field=models.ManyToManyField(blank=True, related_name='options_radio', to='BaseBillet.optiongenerale', verbose_name='Single choice menu'),
        ),
        migrations.AlterField(
            model_name='event',
            name='products',
            field=models.ManyToManyField(blank=True, to='BaseBillet.product', verbose_name='Products'),
        ),
        migrations.AlterField(
            model_name='event',
            name='published',
            field=models.BooleanField(default=True, verbose_name='Publish'),
        ),
        migrations.AlterField(
            model_name='event',
            name='short_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Short description'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='event',
            field=models.BooleanField(default=False, verbose_name='Events'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='ip',
            field=models.GenericIPAddressField(blank=True, help_text='API key works with any IP unless specified.', null=True, verbose_name='Ip source'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='key',
            field=models.OneToOneField(blank=True, help_text='Confirm to generate key. It will not appear before.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_key', to='rest_framework_api_key.apikey'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='product',
            field=models.BooleanField(default=False, verbose_name='Products'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='reservation',
            field=models.BooleanField(default=False, verbose_name='Bookings'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='ticket',
            field=models.BooleanField(default=False, verbose_name='Tickets'),
        ),
        migrations.AlterField(
            model_name='externalapikey',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User who created this key.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='federatedplace',
            name='tag_exclude',
            field=models.ManyToManyField(blank=True, help_text="Don't show those tags.", related_name='excluded', to='BaseBillet.tag', verbose_name='Excluded tags'),
        ),
        migrations.AlterField(
            model_name='federatedplace',
            name='tag_filter',
            field=models.ManyToManyField(blank=True, help_text='Show only these tags.', related_name='filtred', to='BaseBillet.tag', verbose_name='Tag filters'),
        ),
        migrations.AlterField(
            model_name='federatedplace',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Collective', to='Customers.client'),
        ),
        migrations.AlterField(
            model_name='formbricksforms',
            name='environmentId',
            field=models.CharField(help_text='Formbricks environment ID', max_length=30),
        ),
        migrations.AlterField(
            model_name='formbricksforms',
            name='trigger_name',
            field=models.CharField(help_text='Form trigger name', max_length=30),
        ),
        migrations.AlterField(
            model_name='lignearticle',
            name='amount',
            field=models.IntegerField(default=0, verbose_name='Value'),
        ),
        migrations.AlterField(
            model_name='lignearticle',
            name='membership',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lignearticles', to='BaseBillet.membership', verbose_name='Linked subscription'),
        ),
        migrations.AlterField(
            model_name='lignearticle',
            name='payment_method',
            field=models.CharField(blank=True, choices=[('NA', 'Offered'), ('CC', 'Credit card: POS terminal'), ('CA', 'Cash'), ('CH', 'Check'), ('SF', 'Online: federated Stripe'), ('SN', 'Online: Stripe account'), ('SR', 'Recurring: Stripe account')], max_length=2, null=True, verbose_name='Payment method'),
        ),
        migrations.AlterField(
            model_name='lignearticle',
            name='pricesold',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BaseBillet.pricesold', verbose_name='Product sold'),
        ),
        migrations.AlterField(
            model_name='lignearticle',
            name='status',
            field=models.CharField(choices=[('C', 'Cancelled'), ('O', 'Not sent to payment'), ('U', 'Not paid'), ('F', 'Free booking'), ('P', 'Paid but not confirmed'), ('V', 'Confirmed')], default='O', max_length=3, verbose_name='Product entry status'),
        ),
        migrations.AlterField(
            model_name='lignearticle',
            name='vat',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='VAT'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='deadline',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Subscription end'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='first_name',
            field=models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='First name'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='last_action',
            field=models.DateTimeField(auto_now=True, verbose_name='Presence'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='last_contribution',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Payment date'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='last_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Last name'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='newsletter',
            field=models.BooleanField(default=True, verbose_name="I want to receive the collective's newsletter."),
        ),
        migrations.AlterField(
            model_name='membership',
            name='payment_method',
            field=models.CharField(blank=True, choices=[('NA', 'Offered'), ('CC', 'Credit card: POS terminal'), ('CA', 'Cash'), ('CH', 'Check'), ('SF', 'Online: federated Stripe'), ('SN', 'Online: Stripe account'), ('SR', 'Recurring: Stripe account')], max_length=2, null=True, verbose_name='Payment method'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='price',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='membership', to='BaseBillet.price', verbose_name='Product / price'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='status',
            field=models.CharField(choices=[('D', 'Saved through the admin'), ('O', 'Single online payment'), ('A', 'Automatic renewal'), ('C', 'Cancelled')], default='O', max_length=1, verbose_name='Origin'),
        ),
        migrations.AlterField(
            model_name='optiongenerale',
            name='poids',
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='paiement_stripe',
            name='order_date',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Order date'),
        ),
        migrations.AlterField(
            model_name='paiement_stripe',
            name='source',
            field=models.CharField(choices=[('Q', 'From QR code scan'), ('B', 'From API'), ('F', 'From ticketing app'), ('I', 'From invoice')], default='B', max_length=1, verbose_name='Order source'),
        ),
        migrations.AlterField(
            model_name='paiement_stripe',
            name='source_traitement',
            field=models.CharField(choices=[('N', 'No processing ongoing'), ('W', 'From Stripe webhook'), ('G', 'From Get'), ('I', 'From invoice webhook')], default='N', max_length=1, verbose_name='Processing origin'),
        ),
        migrations.AlterField(
            model_name='paiement_stripe',
            name='status',
            field=models.CharField(choices=[('N', 'Payment link not generated'), ('O', 'Sent to Stripe'), ('W', 'Waiting for payment'), ('E', 'Expired'), ('P', 'Paid for'), ('V', 'Paid and confirmed'), ('S', 'Paid but issues with Stripe sync'), ('C', 'Cancelled')], default='N', max_length=1, verbose_name='Order status'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='address_country',
            field=models.CharField(help_text='Full name or ISO code.', max_length=255, verbose_name='Country'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='address_locality',
            field=models.CharField(help_text='Town or city name.', max_length=255, verbose_name='Locality'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='address_region',
            field=models.CharField(blank=True, help_text='State, province or region.', max_length=255, null=True, verbose_name='Region'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='comment',
            field=models.TextField(blank=True, help_text='Comment about the address.', null=True, verbose_name='Comment'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='is_main',
            field=models.BooleanField(default=False, verbose_name='Main address'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=6, help_text='GPS coordinate: latitude.', max_digits=9, null=True, verbose_name='Latitude'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=6, help_text='GPS coordinate: longitude.', max_digits=9, null=True, verbose_name='Longitude'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='name',
            field=models.CharField(blank=True, help_text='It will help with finding it quickly later.', max_length=400, null=True, verbose_name='Address name'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='postal_code',
            field=models.CharField(help_text='Postcode or zip code.', max_length=20, verbose_name='Zip code'),
        ),
        migrations.AlterField(
            model_name='postaladdress',
            name='street_address',
            field=models.TextField(help_text='Street number, name, etc.', verbose_name='Street address'),
        ),
        migrations.AlterField(
            model_name='price',
            name='adhesion_obligatoire',
            field=models.ForeignKey(blank=True, help_text='Rate available to suscribers only: ', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='adhesion_obligatoire', to='BaseBillet.product', verbose_name='Subscription required'),
        ),
        migrations.AlterField(
            model_name='price',
            name='free_price',
            field=models.BooleanField(default=False, help_text='The amount will be asked on the Stripe checkout page.', verbose_name='Open price'),
        ),
        migrations.AlterField(
            model_name='price',
            name='max_per_user',
            field=models.PositiveSmallIntegerField(default=10, help_text='The same email can be used for multiple orders.', verbose_name='Maximum orders per user'),
        ),
        migrations.AlterField(
            model_name='price',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Rate name'),
        ),
        migrations.AlterField(
            model_name='price',
            name='prix',
            field=models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Price'),
        ),
        migrations.AlterField(
            model_name='price',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prices', to='BaseBillet.product', verbose_name='Product'),
        ),
        migrations.AlterField(
            model_name='price',
            name='publish',
            field=models.BooleanField(default=True, verbose_name='Publish'),
        ),
        migrations.AlterField(
            model_name='price',
            name='recurring_payment',
            field=models.BooleanField(default=False, help_text='Monthly payment through Stripe, limited to one product at checkout.', verbose_name='Monthly fee'),
        ),
        migrations.AlterField(
            model_name='price',
            name='subscription_type',
            field=models.CharField(choices=[('N', 'Non applicable'), ('H', '1 hour'), ('D', '1 day'), ('M', '30 days'), ('Y', '365 days'), ('C', 'Calendar year : 1st of January'), ('S', 'School year: 1st of September')], default='N', max_length=1, verbose_name='Subscription duration'),
        ),
        migrations.AlterField(
            model_name='price',
            name='vat',
            field=models.CharField(choices=[('NA', 'Non applicable'), ('DX', '10 %'), ('VG', '20 %'), ('HC', '8.5 %'), ('DD', '2.2 %')], default='NA', max_length=2, verbose_name='VAT rate'),
        ),
        migrations.AlterField(
            model_name='pricesold',
            name='productsold',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='BaseBillet.productsold', verbose_name='Product'),
        ),
        migrations.AlterField(
            model_name='product',
            name='archive',
            field=models.BooleanField(default=False, verbose_name='Archive'),
        ),
        migrations.AlterField(
            model_name='product',
            name='categorie_article',
            field=models.CharField(choices=[('N', 'Select a category'), ('B', 'Ticket booking'), ('F', 'Free booking'), ('A', 'Subscription or membership'), ('G', 'Punchclock')], default='N', max_length=3, verbose_name='Product type'),
        ),
        migrations.AlterField(
            model_name='product',
            name='img',
            field=stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='images/', validators=[stdimage.validators.MaxSizeValidator(1920, 1920)], variations={'crop': (480, 270, True), 'crop_hdr': (960, 540, True), 'fhd': (1920, 1920), 'hdr': (720, 720), 'med': (480, 480), 'thumbnail': (150, 90)}, verbose_name='Product image'),
        ),
        migrations.AlterField(
            model_name='product',
            name='legal_link',
            field=models.URLField(blank=True, help_text='Not required.', null=True, verbose_name='Terms and conditions link'),
        ),
        migrations.AlterField(
            model_name='product',
            name='long_description',
            field=models.TextField(blank=True, null=True, verbose_name='Long description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=500, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='nominative',
            field=models.BooleanField(default=False, help_text="Intended recipient's first and last names required for each ticket.", verbose_name='Named booking'),
        ),
        migrations.AlterField(
            model_name='product',
            name='option_generale_checkbox',
            field=models.ManyToManyField(blank=True, help_text='Any number of choices can be selected at order time.', related_name='produits_checkbox', to='BaseBillet.optiongenerale', verbose_name='Multiple choice menu'),
        ),
        migrations.AlterField(
            model_name='product',
            name='option_generale_radio',
            field=models.ManyToManyField(blank=True, help_text='Only one choice can be selected at order time.', related_name='produits_radio', to='BaseBillet.optiongenerale', verbose_name='Single choice menu'),
        ),
        migrations.AlterField(
            model_name='product',
            name='poids',
            field=models.PositiveSmallIntegerField(default=0, help_text='Products are ordered lightest first.', verbose_name='Weight'),
        ),
        migrations.AlterField(
            model_name='product',
            name='publish',
            field=models.BooleanField(default=True, verbose_name='Publish'),
        ),
        migrations.AlterField(
            model_name='product',
            name='short_description',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Short description'),
        ),
        migrations.AlterField(
            model_name='productsold',
            name='categorie_article',
            field=models.CharField(choices=[('N', 'Select a category'), ('B', 'Ticket booking'), ('F', 'Free booking'), ('A', 'Subscription or membership'), ('G', 'Punchclock')], default='N', max_length=3, verbose_name='Product type'),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='status',
            field=models.CharField(choices=[('C', 'Cancelled'), ('R', 'Created'), ('U', 'Payment still pending'), ('F', 'Email verification still pending'), ('FA', 'Email verified'), ('P', 'Payment confirmed'), ('PE', 'Payment confirmed but invalid email'), ('PN', 'Payment confirmed but email not sent'), ('V', 'Confirmed')], default='R', max_length=3, verbose_name='Order status'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=models.CharField(default='#000000', max_length=7, verbose_name='Tag color'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Tag name'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=models.CharField(db_index=True, max_length=50, verbose_name='Tag slug'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='payment_method',
            field=models.CharField(blank=True, choices=[('NA', 'Offered'), ('CC', 'Credit card: POS terminal'), ('CA', 'Cash'), ('CH', 'Check'), ('SF', 'Online: federated Stripe'), ('SN', 'Online: Stripe account'), ('SR', 'Recurring: Stripe account')], max_length=2, null=True, verbose_name='Payment method'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='sale_origin',
            field=models.CharField(choices=[('LP', 'Online platform'), ('LB', 'Cash register'), ('AD', 'Administration'), ('EX', 'External')], default='LP', max_length=2, verbose_name='Payment source'),
        ),
        migrations.AlterField(
            model_name='ticket',
            name='status',
            field=models.CharField(choices=[('C', 'Created'), ('N', 'Inactive'), ('K', 'Not scanned'), ('S', 'Scanned')], default='C', max_length=1, verbose_name='Scanning status'),
        ),
        migrations.AlterField(
            model_name='webhook',
            name='event',
            field=models.CharField(choices=[('MV', 'Confirmed subscription'), ('RV', 'Confirmed booking')], default='RV', max_length=2, verbose_name='Event'),
        ),
        migrations.AlterField(
            model_name='weekday',
            name='day',
            field=models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], unique=True),
        ),
    ]
